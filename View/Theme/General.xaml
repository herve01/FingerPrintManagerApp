<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:FingerPrintManagerApp.View.Converter"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:control="clr-namespace:FingerPrintManagerApp.View.Control"
                    mc:Ignorable="d">

    <!-- Common Styles -->
    <!--Control colors.-->
    <converter:PathDataConverter x:Key="pathDataConverter" />
    <converter:DoubleHalfConverter x:Key="doubleHalfConverter" />
    <converter:ListViewItemToPositionSeparatorVisibilityConverter x:Key="separatorConverter" />

    <Style x:Key="tabItemHeaderStyle" TargetType="ContentPresenter">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="12,2,25,4" />
        <Setter Property="TextBlock.Foreground" Value="#154bba" />
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI Light" />
        <Setter Property="TextBlock.FontSize" Value="16" />
    </Style> 
    <Color x:Key="optionButtonBgColor">#2887f2</Color>

    <Color x:Key="tabOptionBgColor">#FF2887F2</Color>
    <Color x:Key="tabOptionFgColor">#FFFFFFFF</Color>
    <Color x:Key="tabOptionBgColorStd">#FF999999</Color>
    <Color x:Key="tabOptionFgColorStd">#FFFFFFFF</Color>

    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>



    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MediumTitleBlueStyle" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF343434" Offset="1"/>
        <GradientStop Color="#FF9E9E9E"/>
        <GradientStop Color="#FF919090" Offset="0.499"/>
        <GradientStop Color="#FF3C3C3C" Offset="0.5"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000CC"
                    Offset="0" />
                <GradientStop Color="#600000CC"
                    Offset="0.4" />
                <GradientStop Color="#600000CC"
                    Offset="0.6" />
                <GradientStop Color="#000000CC"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!-- End of Common Styles -->

    <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="6"
                          MinWidth="50"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track"
                                  CornerRadius="4"
                                  BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#997e7e7e" />
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="PART_Indicator"
                                  CornerRadius="4 0 0 4"
                                  BorderThickness="0 0 1 0"
                                  HorizontalAlignment="Left"
                                  Background="{TemplateBinding Foreground}"
                                  Margin="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#10ffffff"
                                                          
                                  Offset="0.0" />
                                            <GradientStop Color="#05ffffff"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Grid ClipToBounds="True"
                                    x:Name="Animation">
                                <Rectangle x:Name="PART_GlowRect"
                                             Width="100"
                                             HorizontalAlignment="Left"
                                             Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                                             Margin="-100,0,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                    <GradientStop Color="#50000000"
                      Offset="0" />
                    <GradientStop Color="#70000000"
                      Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#35007ACC" Offset="0"/>
                    <GradientStop Color="#72007ACC" Offset="1"/>
                    <GradientStop Color="#72007ACC" Offset="0.499"/>
                    <GradientStop Color="#8C007ACC" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider Style -->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Height="4" >
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="#FF333333" Offset="0"/>
                                <GradientStop Color="#FF999999" Offset="1"/>
                                <GradientStop Color="#FF777777" Offset="0.5"/>
                                <GradientStop Color="#FF444444" Offset="0.481"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonStyleRight" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#00000000" Height="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" 
               TargetType="{x:Type Thumb}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Polygon Points="0,5 5,0 10,5 5,10" Stretch="Fill" x:Name="Path"
                    		StrokeThickness="1" 
                    		Stroke="#B2000000" Fill="#FFF3F3F3">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill). (SolidColorBrush.Color)"
                    							Storyboard.TargetName="Path">
                                                <EasingColorKeyFrame KeyTime="0"
                    								Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TickBar x:Name="TopTick"
            		SnapsToDevicePixels="True"
            		Placement="Top"
            		Height="4"
            		Visibility="Collapsed" Fill="Black"/>

            <Border x:Name="TrackBackground"
                    Margin="0"
                    Height="4"
                    Grid.Row="1"
                    BorderThickness="1" Background="#9d9d9d" BorderBrush="#FF878787"
                   />

            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" Margin="0,0,-2,0"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyleRight}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>

            <TickBar x:Name="BottomTick"
            		SnapsToDevicePixels="True"
            		Grid.Row="2"
            		Fill="{TemplateBinding Foreground}"
            		Placement="Bottom"
            		Height="4"
            		Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TickBar x:Name="TopTick"
                         SnapsToDevicePixels="True"
                         Placement="Left"
                         Width="4"
                         Visibility="Collapsed" Fill="#000000"/>

            <Border x:Name="TrackBackground"
                        Margin="0"
                        CornerRadius="2"
                        Width="4"
                        Grid.Column="1"
                        BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="1,0"
                             StartPoint="0.25,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
                        <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                        Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Track Grid.Column="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"  Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
            		SnapsToDevicePixels="True"
            		Grid.Column="2"
            		Fill="{TemplateBinding Foreground}"
            		Placement="Right"
            		Width="4"
            		Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}" x:Key="SliderStyle">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="50" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="50" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Combobox Style -->
    <ControlTemplate x:Key="ComboBoxToggleButtons"
                 TargetType="{x:Type ToggleButton}">
        <Border>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"

                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#FFF4F4F4" />
                                </ColorAnimationUsingKeyFrames>

                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="BorderPath">
                                    <EasingColorKeyFrame KeyTime="0:0:0.5"
                                   Value="#111111" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0:0:0.5"
                                   Value="#FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" >
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="BorderPath">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#007acc" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled" />

                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="BorderPath">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#007acc" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border Grid.Column="0"
                        Grid.RowSpan="2"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"/>
                
                <Border x:Name="BorderPath" 
                        Grid.Column="1" 
                        Background="#fff"  
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="0 4 4 0"
                        BorderThickness="0 1 1 1"
                        Panel.ZIndex="10"
                        Padding="0,5">
                    <Path x:Name="Arrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Margin="0,1"
                          Data="M 0 0 L 0 2 L 4 6 L 8 2 L 8 0 L 4 4 L 0 0 z" Fill="#FF7A7A7A" 
                          Width="10" 
                          Stretch="Uniform" />
                </Border>


            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"

                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#FFF4F4F4" />
                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="BorderPath">
                                <EasingColorKeyFrame KeyTime="0:0:0.5"
                                   Value="#111111" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0:0:0.5"
                                   Value="#FFFFFF" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />

                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="BorderPath">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#007acc" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#FFFFFF" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        BorderThickness="1" Background="#EDEDED" BorderBrush="#CCCCCC"/>
            <Border Grid.Column="0"
                        CornerRadius="0"
                        Margin="1" Background="#Fafafa" />
            <Border x:Name="BorderPath" Grid.Column="1" Width="16" Height="16" CornerRadius="8" Background="LightGray" Margin="2,5,2,0" VerticalAlignment="Top" />
            <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 2 L 4 6 L 8 2 L 8 0 L 4 4 L 0 0 Z" Fill="#FF090909" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
              Focusable="True"
              Background="#EEEEEE" />
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MyComboItemStyle}" />
        <Setter Property="OverridesDefaultStyle"  Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"  Value="true" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight"  Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="False"
                                ClickMode="Press"
                                 IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Left"/>

                        <TextBox   x:Name="PART_EditableTextBox"
                                       Style="{x:Null}"
                                       Template="{StaticResource ComboBoxTextBox}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       Margin="3,3,23,3"
                                       Focusable="True"
                                       Background="Transparent"
                                       Visibility="Collapsed"
                                       IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup   x:Name="Popup"
                                     Placement="Bottom"
                                     IsOpen="{TemplateBinding IsDropDownOpen}"
                                     AllowsTransparency="True"
                                     Focusable="False"
                                     PopupAnimation="Slide">

                            <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                 >

                                <Border x:Name="DropDownBorder"
                                         BorderThickness="1" BorderBrush="#FFA2A2A2">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>
                                </Border>

                                <ScrollViewer Margin="4,6"
                            SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight"  Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency"  Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder"  Property="Margin" Value="0,1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxOption" TargetType="{x:Type ComboBox}">
        
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle"  Value="true" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MyComboOptionItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"  
                Value="true" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="Background" Value="#fff" />
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight"  Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
        										Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
        										Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
        											Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
        										Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
        											Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Name="bdPopup" Grid.Row="0" />
                        <ToggleButton x:Name="ToggleButton"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Background="{TemplateBinding Background}"
        						      Template="{StaticResource ComboBoxToggleButtons}"
                                      IsEnabled="{TemplateBinding IsEnabled}"
        						        Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                        Grid.Row="1"
        						        Focusable="False"
        						        ClickMode="Press"
        						        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
        						         IsHitTestVisible="False"
                                          Grid.Row="1"
        						        Content="{TemplateBinding SelectionBoxItem}"
        						        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        						        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        						        Margin="{TemplateBinding Padding}"
        						        VerticalAlignment="Center"
        						        HorizontalAlignment="Left"
                                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"/>

                        <TextBox   x:Name="PART_EditableTextBox"
        						    Style="{x:Null}"
                                    Grid.Row="1"
        						    Template="{StaticResource ComboBoxTextBox}"
        						    HorizontalAlignment="Left"
        						    Focusable="True"
        						    Background="Transparent"
        						    Visibility="Collapsed"
                                   Padding="5 2"
        						    IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup x:Name="Popup"
        						Placement="Bottom"
                                PlacementTarget="{Binding ElementName=ToggleButton}"
        						IsOpen="{TemplateBinding IsDropDownOpen}"
                                StaysOpen="{Binding ElementName=PART_EditableTextBox, Path=IsFocused}"
        						AllowsTransparency="True"
        						Focusable="True"
        						PopupAnimation="Slide">

                            <Grid x:Name="DropDown"
        							SnapsToDevicePixels="True"
        							Width="{TemplateBinding ActualWidth}"
        							MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                  >

                                <Border x:Name="DropDownBorder" 
                                        CornerRadius="0 0 4 4"
                                        Background="#FFFEFEFE">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" 
                                                          Direction="270" 
                                                          BlurRadius="5" 
                                                          Opacity="0.3"/>
                                    </Border.Effect>
                                </Border>

                                <ScrollViewer Margin="10"
        								SnapsToDevicePixels="True"
                                              HorizontalScrollBarVisibility="Hidden">
                                    <StackPanel IsItemsHost="True"
        									KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight"  Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency"  Value="true">
                            <Setter TargetName="DropDownBorder"  Property="Margin" Value="4 0 4 4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="#90ff0000" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyComboOptionItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"  Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" 
                            Padding="2" 
                            SnapsToDevicePixels="true" 
                            Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Path Data="M16,0C24.837036,0 32,7.1629944 32,16 32,24.836975 24.837036,32 16,32 7.1630249,32 0,24.836975 0,16 0,7.1629944 7.1630249,0 16,0z"
                                  Width="8" 
                                  Margin="2 0"
                                  Stretch="Uniform" 
                                  Fill="#FF777777"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Name="path"
                                  Visibility="Hidden"
                                  />
                            <ContentPresenter 
                                Margin="3,0"
                                Name="contentPresenter"
                                Grid.Column="1"
                                TextBlock.FontSize="13"
                                TextBlock.Foreground="#FF777777"
                                TextBlock.FontWeight="SemiBold"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#EE007acc" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="path"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyComboItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"  Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" 
                            Padding="2" 
                            SnapsToDevicePixels="true" 
                            Background="Transparent" 
                            CornerRadius="4">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFefefef" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                    <!--ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.EnterActions>
                                    <BeginStoryboard x:Name="ItemHoverStoryboard">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0:0:0.3"
                                         Value="#FFEEEEEE" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.EnterActions>
                                <EventTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="ItemHoverStoryboard"/>
                                </EventTrigger.ExitActions>
                            </EventTrigger>
                        </ControlTemplate.Triggers-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End of ComboboxStyle-->


    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF111111" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Row="0" BorderThickness="0,0,0,1" Background="White" Margin="0,0,4,-1" BorderBrush="#eaeaea">
                            <TabPanel x:Name="HeaderPanel"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                
                                      />
                        </Border>


                        <Border x:Name="BorderCont"
                                    Grid.Row="1"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    BorderBrush="Transparent"
                                    Background="Transparent" RenderTransformOrigin="0.5,0.5">


                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                                Margin="4"
                                                ContentSource="SelectedContent" RenderTransformOrigin="0.5,0.5" />

                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Border"
                                                                         Storyboard.TargetProperty="BorderThickness" Duration="0:0:0" To="1,1,1,0"/>

                                        <ThicknessAnimation Storyboard.TargetName="Border"
                                                                         Storyboard.TargetProperty="Margin" Duration="0:0:0" To="-4,0,5, -1"/>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="grad1"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFFAFAFA" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                    Margin="-4,0,-4, 0"
                                    BorderThickness="0,0,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#fdfdfd" Offset="1" x:Name="grad1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#eaeaea"/>
                            </Border.BorderBrush>
                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  ContentSource="Header"
                                                  Style="{StaticResource tabItemHeaderStyle}"
                                                  />

                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle"  Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                            Margin="1"
                            BorderThickness="1"
                            BorderBrush="Transparent" Background="#7FE8E8EC">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF111111" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF999999" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF007ACC" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFE8E8EC" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                             Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FF868999" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#00FFFFFF"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#7FA6A6A6" x:Name="Border">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FF130d49" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FF000000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
            Background="#00E8E8EC" Width="14"/>
            <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 6 L 0 4 L 4 0 L 8 4 L 8 6 L 4 2 L 0 6 Z" />
            <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="6,0,6,0">
                        <Thumb.BorderBrush>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.BorderBrush>
                        <Thumb.Background>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 0 2 L 4 6 L 8 2 L 8 0 L 4 4 L 0 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                        Height="14"
                        Background="#000404BF" Margin="0,10,0,0" />
            <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 6 0 L 4 0 L 0 4 L 4 8 L 6 8 L 2 4 L 6 0 Z" />
            <Track x:Name="PART_Track"
                       Grid.Column="1"
                       IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                                Margin="2,5">

                        <Thumb.BorderBrush>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.BorderBrush>
                        <Thumb.Background>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 2 0 L 6 4 L 2 8 L 0 8 L 4 4 L 0 0 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="Width"
              Value="Auto" />
                <Setter Property="Height"
              Value="16" />
                <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="Width"
              Value="18" />
                <Setter Property="Height"
              Value="Auto" />
                <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="{x:Type ToolTip}"
       TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="#FF5D5D5D" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Border"
                            BorderThickness="2"
                            Padding="8"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}" BorderBrush="#FF5D5D5D" Background="White">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="registerStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Height="50" Width="Auto" BorderBrush="#dadada" Background="Transparent" Name="border" BorderThickness="0">
                        <ContentPresenter x:Name="content"
                                                  TextBlock.FontSize="13"
                                                  TextBlock.FontFamily="Segoe UI"
                                                  TextBlock.TextAlignment="Left"
                                                  TextBlock.Foreground="#ffffff"
                                              VerticalAlignment="Center"
                                                  Margin="5,2"
                                              Grid.Column="1"
                                                  />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="
"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#10FFFFFF" Duration="0:0:0.5"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#50FFFFFF" Duration="0:0:0.5"/>

                                    </Storyboard>

                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Menu.Option.Selection.Background" Color="#007ACC" />

    <Style x:Key="menuOptionStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Height="48" Width="Auto" BorderBrush="#dadada" 
                            Background="#00FFFFFF" 
                            x:Name="border" 
                            BorderThickness="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" 
                                    Width="4" 
                                    Height="25" 
                                    x:Name="indicator" 
                                    Background="{StaticResource Menu.Option.Selection.Background}"
                                    Visibility="Hidden"/>

                            <Path Data="{TemplateBinding Property=Tag, Converter={StaticResource pathDataConverter}}" 
                                  Fill="#000"
                                  x:Name="path"
                                  Stretch="Uniform"
                                  Width="18"
                                  Height="18"
                                  Margin="10,0"
                                  Grid.Column="1"/>

                            <ContentPresenter x:Name="content"
                                              TextBlock.FontSize="15"
                                              TextBlock.TextAlignment="Left"
                                              TextBlock.FontWeight="Regular"
                                              TextBlock.Foreground="#000"
                                              VerticalAlignment="Center"
                                              Margin="5,2"
                                              Grid.Column="2"
                                          />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="#10000000" Duration="0:0:0"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="indicator"
                                                                      Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="menuOption2Style" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Height="40" Width="Auto" BorderBrush="#dadada" Background="#00FFFFFF" x:Name="border" BorderThickness="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border CornerRadius="15"
                                    Margin="5"
                                    Height="30"
                                    Width="30">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFECFE" Offset="0"/>
                                        <GradientStop Color="#FFE2FAFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path
                                      x:Name="path"
                                      Stretch="Uniform"
                                      Width="15"
                                      Height="15"
                                      Grid.Column="0"
                                      Data="M7.9679892,25.030996L30.967989,25.030996C31.520988,25.030996 31.967989,25.478996 31.967989,26.030996 31.967989,26.582996 31.520988,27.030996 30.967989,27.030996L7.9679892,27.030996C7.414989,27.030996 6.967989,26.582996 6.9679892,26.030996 6.967989,25.478996 7.414989,25.030996 7.9679892,25.030996z M2,24.030996C3.105,24.030996 4,24.925997 4,26.030996 4,27.135996 3.105,28.030996 2,28.030996 0.89499998,28.030996 0,27.135996 0,26.030996 0,24.925997 0.89499998,24.030996 2,24.030996z M7.9679892,13.030997L30.967989,13.030997C31.520967,13.030996 31.967989,13.478994 31.967989,14.030997 31.967989,14.582998 31.520967,15.030996 30.967989,15.030997L7.9679892,15.030997C7.4150105,15.030996 6.967989,14.582998 6.9679892,14.030997 6.967989,13.478994 7.4150105,13.030996 7.9679892,13.030997z M2,12.014998C3.105,12.014998 4,12.909998 4,14.014998 4,15.119998 3.105,16.014998 2,16.014998 0.89499998,16.014998 0,15.119998 0,14.014998 0,12.909998 0.89499998,12.014998 2,12.014998z M7.9679887,1.0309963L30.967989,1.0309963C31.520988,1.0309963 31.967989,1.4789963 31.967989,2.0309963 31.967989,2.5829964 31.520988,3.0309963 30.967989,3.0309963L7.9679887,3.0309963C7.414989,3.0309963 6.967989,2.5829964 6.9679892,2.0309963 6.967989,1.4789963 7.414989,1.0309963 7.9679887,1.0309963z M2,0C3.105,0 4,0.8949995 4,2 4,3.1049995 3.105,4 2,4 0.89499998,4 0,3.1049995 0,2 0,0.8949995 0.89499998,0 2,0z">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFD80D8E" Offset="0"/>
                                            <GradientStop Color="#FF2FB3B9" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                            </Border>
                            <ContentPresenter x:Name="content"
                                              TextBlock.FontSize="16"
                                              TextBlock.FontFamily="Segoe UI"
                                              TextBlock.TextAlignment="Left"
                                              TextBlock.Foreground="#777"
                                              VerticalAlignment="Center"
                                              Margin="5,2"
                                              Grid.Column="2"
                                          />

                            <Border Grid.Column="1" 
                                    Margin="0,0,20,0" 
                                    VerticalAlignment="Bottom" 
                                    Panel.ZIndex="1" Height="1" 
                                    x:Name="indicator" 
                                    Background="#eaeaea" />

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="indicator"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#2888f3" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#2888f3" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="optionStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="Segoe UI Light" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" 
                            Height="40"
                            Margin="10,0,20,0"
                            >
                        <ContentPresenter x:Name="content"
                            TextBlock.FontSize="24"
                                          VerticalAlignment="Center"
                                          TextBlock.Foreground="#50ffffff"
                                          TextBlock.TextAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="BackgroundHoverStoryboard">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="50" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="content"
                                                          Storyboard.TargetProperty="(TextBlock.FontSize)"
                                                          To="32" Duration="0:0:0.3" />
                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#ddffffff" Duration="0:0:0"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="40" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="content" 
                                                         Storyboard.TargetProperty="(TextBlock.FontSize)"
                                                              To="24" Duration="0:0:0.1" />
                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#50ffffff" Duration="0:0:0.5"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ButtonClickStoryboard">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="50" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="content"
                                                          Storyboard.TargetProperty="(TextBlock.FontSize)"
                                                          To="34" Duration="0:0:0.3" />
                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#ffffff" Duration="0:0:0.5"/>

                                    </Storyboard>

                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ButtonClickStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sousOptionStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" 
                            Height="26"
                            Margin="10,0"
                            Padding="20,2"
                            CornerRadius="6"
                            Background="Transparent"
                            >
                        <ContentPresenter x:Name="content"
                                          TextBlock.FontSize="14"
                                          TextBlock.Foreground="#404040"
                                          TextBlock.TextAlignment="Center"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#007ACC" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="BackgroundHoverStoryboard">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#33007acc" Duration="0:0:0.5"/>
                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#999" Duration="0:0:0.5"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.5"/>
                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#404040" Duration="0:0:0.5"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ButtonClickStoryboard">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#d1e3f7" Duration="0:0:0.5"/>

                                        <ColorAnimation 
                                                Storyboard.TargetName="content"
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#1f66b1" Duration="0:0:0.5"/>

                                    </Storyboard>

                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ButtonClickStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="roundMenuButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Left" Width="60" Height="60">
                        <Border x:Name="outterRectangle" CornerRadius="30" BorderThickness="1" BorderBrush="#FF000000">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF023B61" Offset="0" x:Name="GradientStop1"/>
                                    <GradientStop Color="#FF05253A" Offset="1" x:Name="GradientStop2"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <DockPanel>
                            <Viewbox>
                                <ContentPresenter />
                            </Viewbox>
                        </DockPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimation Storyboard.TargetName="GradientStop1" Storyboard.TargetProperty="Color" To="#FFB00A74" Duration="0:0:0.5"/>
                                        <ColorAnimation Storyboard.TargetName="GradientStop2" Storyboard.TargetProperty="Color" To="#FF3E0429" Duration="0:0:0.5"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyControl" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="#AAA" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            Height="{TemplateBinding Height}"  
                            x:Name="fond"   
                            Background="#FFF">

                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Margin="{TemplateBinding Padding}"  
                                      Focusable="True" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      HorizontalContentAlignment="{TemplateBinding TextAlignment}"
                                      />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#10ffffff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#20999999" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusedStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#fff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#2888f3" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="#90ff0000" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxPlaceHolderStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}" 
                            BorderThickness="1" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="#fff">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Cursor="IBeam"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Padding="{TemplateBinding Padding}" 
                                          Focusable="True" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <TextBlock Text="{TemplateBinding Tag}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Padding="{TemplateBinding Padding}"
                                       Foreground="#BBB"
                                       FontStyle="Italic">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#eee" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#007ACC" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="#90ff0000" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyControl2" TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderBrush" Value="#AAA" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            Height="{TemplateBinding Height}"  
                            x:Name="fond"   
                            Background="#FFF">

                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Margin="{TemplateBinding Padding}"  
                                      Focusable="True" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#10ffffff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#20999999" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusedStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#fff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#2888f3" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="#90ff0000" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RoundedTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="#CCC" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            Height="{TemplateBinding Height}"  
                            x:Name="fond"  
                            CornerRadius="{TemplateBinding Height, Converter={StaticResource doubleHalfConverter}}"
                            Background="#FFF" >

                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Margin="{TemplateBinding Padding}"  
                                      Focusable="True" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      HorizontalContentAlignment="{TemplateBinding TextAlignment}"
                                      />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#10ffffff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#20999999" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusedStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#fff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#2888f3" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="#90ff0000" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MaskTextBoxStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:MaskedTextBox}">
                    <Border BorderBrush="#FFB4B4B4" BorderThickness="2" Height="{TemplateBinding Height}"  x:Name="fond" RenderTransformOrigin="0.5,0.5"  
                            Background="#FFF9F9F9" >

                        <ScrollViewer x:Name="PART_ContentHost" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="5,5,0,0"  Focusable="True" VerticalAlignment="Center" HorizontalAlignment="Left" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="Transparent" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="Transparent" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusedStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#fff" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#2888f3" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxModifyStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#00000000" 
                            Height="{TemplateBinding Height}" 
                            BorderThickness="1" 
                            x:Name="fond"   
                            Background="#00000000" >

                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Width="{TemplateBinding Width}" 
                                      Height="{TemplateBinding Height}" 
                                      Padding="5,5,0,0"  
                                      Focusable="True" 
                                      Foreground="{TemplateBinding Foreground}"
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Left" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" />
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#FFCCCCCC" Duration="0:0:0"/>
                                        <ColorAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(ScrollViewer.Foreground).(SolidColorBrush.Color)"
                                                            To="#FF000000" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyControlConnection">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#FF007ACC" Height="{TemplateBinding Height}" BorderThickness="1" x:Name="fond" RenderTransformOrigin="0.5,0.5"  Background="#fafafa" >

                        <ScrollViewer x:Name="PART_ContentHost" Width="{TemplateBinding Width}" Height="20" Padding="5,0,0,0"  Focusable="True" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#fff" Duration="0:0:0.5"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#FF007ACC" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            From="#fff" To="#fafafa" Duration="0:0:0.5"/>
                                        <ColorAnimation Storyboard.TargetName="fond" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#FF007ACC" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="fond" Property="Background" 
                                        Value="{StaticResource txtBoxChosen}" />
                                <Setter Property="Foreground" Value="#ffffff" /-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="1" Padding="5,0" BorderBrush="#FFC5C5C5" Background="#FFF7F7F7">
                        <Grid>
                            <TextBox  Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                				x:Name="textSource" 
                				Background="Transparent" 
                				BorderBrush="Transparent"
                				Foreground="{TemplateBinding Foreground}"
                				Panel.ZIndex="2">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border BorderBrush="Transparent" Height="{TemplateBinding Height}" BorderThickness="1" x:Name="fond" RenderTransformOrigin="0.5,0.5"  Background="Transparent" >
                                            <ScrollViewer x:Name="PART_ContentHost" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="5,5,0,0"  Focusable="True" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Border>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <TextBox Text="{TemplateBinding Tag}"  Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border BorderBrush="Transparent" Height="{TemplateBinding Height}" BorderThickness="1" x:Name="fond" RenderTransformOrigin="0.5,0.5"  Background="Transparent" >

                                                        <ScrollViewer x:Name="PART_ContentHost" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="5,5,0,0"  Focusable="True" VerticalAlignment="Center" HorizontalAlignment="Left" />

                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="searchControl" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}" 
                            BorderThickness="1" 
                            BorderBrush="#cacaca" 
                            Background="#60ffffff"
                            Padding="8 2"
                            CornerRadius="15">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                              VerticalContentAlignment="Center"
                                              VerticalAlignment="Center"
                                          Cursor="IBeam"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />

                            <TextBlock Text="{TemplateBinding Tag}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="Center"
                                       Padding="{TemplateBinding Padding}"
                                       Foreground="#FF8e8e8e" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <Border Grid.Column="1" Padding="3,0">
                                <Grid>
                                    <Path 
                                      Stretch="Uniform"
                                      Name="path"
                                      Width="12"
                                      Fill="#8a8a8a"
                                      Data="M20.363963,2.0000044C15.050976,2.0000043 10.727978,6.2949964 10.727978,11.573999 10.727978,16.85404 15.050976,21.147995 20.363963,21.147995 25.676981,21.147995 29.999979,16.85404 29.999979,11.573999 29.999979,6.2949964 25.676981,2.0000043 20.363963,2.0000044z M20.363963,0C26.779978,0 31.999979,5.1919667 31.999979,11.573999 31.999979,17.956031 26.779978,23.147998 20.363963,23.147998 17.65722,23.147998 15.163336,22.22394 13.184453,20.676304L12.9726,20.506511 1.4100003,32.001993 0,30.583994 11.540372,19.110611 11.388429,18.931938C9.7271191,16.930492 8.7279784,14.366138 8.7279784,11.573999 8.7279784,5.1919667 13.947979,0 20.363963,0z"
                                    >
                                    </Path>
                                </Grid>

                            </Border>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#007ACC" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#007ACC" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="searchControlDark" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"  
                            Background="#10000000"
                            BorderBrush="#10000000"
                            BorderThickness="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                              VerticalContentAlignment="Center"
                                              VerticalAlignment="Center"
                                          Cursor="IBeam"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />

                            <TextBlock Text="{TemplateBinding Tag}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="Center"
                                       Padding="{TemplateBinding Padding}"
                                       Foreground="#BBB" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <Border Grid.Column="1" Padding="3,0">
                                <Grid>
                                    <Path 
                                      Stretch="Uniform"
                                      Name="path"
                                      Width="13"
                                      Fill="#CCC"
                                      Data="M11.172533,4.5060472C9.7125149,4.4715815 8.2318487,4.9251032 6.991972,5.8980989 4.1649685,8.1240907 3.6749678,12.222075 5.9019709,15.052064 8.1279736,17.876053 12.224979,18.368052 15.051982,16.14406 17.881986,13.918068 18.367987,9.8190839 16.145984,6.992095 14.892732,5.401351 13.049698,4.5503616 11.172533,4.5060472z M11.006125,2.8610229E-06C14.271382,-0.0024776459 17.504767,1.4402094 19.681988,4.2071056 22.781992,8.1530905 22.763992,13.55407 19.971989,17.440055L28.537999,28.330013 23.873993,31.999999 15.333983,21.153041C10.864977,23.055034 5.5109701,21.833038 2.3609667,17.833054 -1.403038,13.050072 -0.57803726,6.1240983 4.2049685,2.3611126 6.2236433,0.77318096 8.6233702,0.0018119812 11.006125,2.8610229E-06z" RenderTransformOrigin="0.5,0.5"
                                    >
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>

                            </Border>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#2888F3" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#2888F3" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#fff" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BtnActionMacStyle" TargetType="{x:Type Button}">
        <Border Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}"
                CornerRadius="4"
                BorderThickness="1"
                Padding="8 0"
                Background="#fff"
                Name="brd">
            <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#d9d9d9" Offset="0"/>
                    <GradientStop Color="#bababa" Offset="1"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Name="content"
                              TextBlock.Foreground="#000"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#cacaca"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="brd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FF5F5F5F"
                                            Duration="0" />
                            
                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#fff"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BtnSaveMacStyle" TargetType="{x:Type Button}">
        <Border Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}"
                CornerRadius="4"
                BorderThickness="1"
                Padding="8 0"
                Name="brd">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2888F3" Offset="0"/>
                    <GradientStop Color="#FF007ACC" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#10000000" Offset="0"/>
                    <GradientStop Color="#20000000" Offset="1"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Name="content"
                              TextBlock.Foreground="#fff"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#20FFFFFF"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>

                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#000"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BtnActionAdobeStyle" TargetType="{x:Type Button}">
        <Border Height="30"
                Width="{TemplateBinding Width}"
                CornerRadius="15"
                BorderThickness="2.5"
                BorderBrush="#747474"
                Padding="8 0"
                Background="#fff"
                Name="brd">
            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Name="content"
                              TextBlock.FontWeight="Bold"
                              TextBlock.Foreground="#747474"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#cacaca"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="brd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FF5F5F5F"
                                            Duration="0" />

                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#fff"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BtnActionAdobeStyle2" TargetType="{x:Type Button}">
        <Border Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}"
                CornerRadius="4"
                BorderThickness="1"
                Padding="8 0"
                Background="#fff"
                BorderBrush="#eaeaea"
                Name="brd">
            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Name="content"
                              TextBlock.Foreground="#000"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#cacaca"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="brd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FF5F5F5F"
                                            Duration="0" />

                            <ColorAnimation Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#fff"
                                            Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BtnHideStyle" TargetType="{x:Type Button}">
        <Grid>
            <Border Width="{TemplateBinding Width}" 
                    Height="{TemplateBinding Height}"
                    CornerRadius="10" 
                    Background="#555"
                    Name="border"
                    Padding="{TemplateBinding Padding}"
                    >
                
                <Path Fill="#eeeeee"
                      Height="8"
                      Width="8"
                      Stretch="Uniform"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Name="path"
                      Data="M6.1999817,0L16,9.8000031 25.799988,0 32,6.1999969 22.199982,16 32,25.800003 25.799988,32 16,22.199997 6.1999817,32 0,25.800003 9.7999878,16 0,6.1999969z"                    />
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#A0000000" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#DEC90404" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#dadada" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                          Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0.2"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

    </ControlTemplate>

    <Style x:Key="MyButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1"
                            CornerRadius="5"  Padding="5,0,5,0" BorderBrush="#FF57002F">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="#FFFF54B1"/>
                                <GradientStop Color="#FF9B008C" Offset="0.996"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                TextBlock.FontWeight="Bold"
                                TextBlock.FontFamily="Segoe UI"
                            TextBlock.Foreground="#FFFFFF"
                                 />
                    </Border>
                    <!--Animation du texte sur le bouton-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentString" Property="TextBlock.Foreground" Value="#CCA7DCFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonlinkStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Cursor="Hand" Padding="5,0" >
                        <TextBlock Name="content"
                                   Text="{TemplateBinding Content}" TextDecorations="Underline"
                                   Foreground="#FF3399FF"
                                   />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        To="#ff0000"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        To="OrangeRed"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSubmit" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            Padding="10,5" 
                            Background="#03dc66"
                            Name="border">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="White"
                                  Stretch="Uniform"
                                  Data="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
                                  Name="path"
                                  />
                            <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                TextBlock.FontSize="14"
                                TextBlock.Foreground="White"
                                Margin="10,0,0,0"
                                 />
                        </StackPanel>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#dd222222" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#999" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#50ffffff" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#50ffffff" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSave" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            Padding="10,5" 
                            Background="#2888f3"
                            Name="border">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="White"
                                  Stretch="Uniform"
                                  Name="path"
                                  Data="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                  Margin="0,0,10,0"
                                  />
                            <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                            TextBlock.FontSize="14"
                            TextBlock.Foreground="White"
                          
                                 />
                        </StackPanel>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#e6e7e8" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#555" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#555" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#84bde3" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#84bde3" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPrint" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            Padding="10,5"
                            CornerRadius="6"
                            Name="border" Background="#B2000000">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="#F2FFFFFF"
                                  Stretch="Uniform"
                                  Data="M10,16L10,26 22,26 22,16z M27.600006,8.4000092C26.800018,8.4000092 26.200012,9 26.200012,9.8000031 26.200012,10.600006 26.800018,11.300003 27.600006,11.300003 28.399994,11.300003 29,10.600006 29,9.8000031 29,9 28.399994,8.4000092 27.600006,8.4000092z M2,6L30,6C31.100006,6,32,6.9000092,32,8L32,18C32,19.100006,31.100006,20,30,20L24,20 24,28 8,28 8,20 2,20C0.8999939,20,0,19.100006,0,18L0,8C0,6.9000092,0.8999939,6,2,6z M8,0L24,0 24,4 8,4z"
                                  Name="path"
                                  >
                            </Path>
                        </StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFF" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonEditGreat" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="Imprimer" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            Padding="10,5"
                            CornerRadius="6"
                            Name="border" Background="#B2000000">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="#F2FFFFFF"
                                  Stretch="Uniform"
                                  Data="M1.867051,22.668933L9.3319602,30.132003 0,31.998993z M18.662943,5.8707967L26.128829,13.335851 11.199011,28.266969 3.7330038,20.800907z M25.196997,0C25.605364,-6.895516E-08,26.013352,0.15525171,26.324872,0.46575543L31.532841,5.6748109C32.155762,6.297802,32.155762,7.3078194,31.532841,7.9318176L27.994782,11.470847 20.53085,4.0047846 24.066832,0.46575543C24.379879,0.15525171,24.788628,-6.895516E-08,25.196997,0z"
                                  Name="path"
                                  >
                            </Path>
                        </StackPanel>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFF" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonSendStyle">
        <Setter Property="ToolTip" Value="Envoyer" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="30" Height="30">
                        <Path Name="path"
                              Fill="#cdcdcd"
                              Width="20"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#111" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonNavStyle">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="30" Height="30" Name="border" CornerRadius="15" Background="#600078d7">
                        <Path Name="path"
                              Fill="#70ffffff"
                              Width="20"
                              Height="20"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="{TemplateBinding Property=Tag, Converter={StaticResource pathDataConverter}}">

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ee0078d7" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCancel" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="2"
                            CornerRadius="0"
                            Padding="20,5" BorderBrush="#FFCCCCCC"
                            Background="#fafafa">
                        <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                            TextBlock.FontSize="15"
                            TextBlock.Foreground="#111"
                                 />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#b50354" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#bbb" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDelete" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1"
                            Height="30"
                            CornerRadius="6"
                            Padding="5,0,5,0" BorderBrush="#FFCCCCCC">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="#FFFD4961"/>
                                <GradientStop Color="#FFB80019" Offset="0.996"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                TextBlock.FontFamily="Segoe UI"
                            TextBlock.FontSize="13"
                            TextBlock.Foreground="#fff"
                                 />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#aaa" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#bbb" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonNew" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1"
                            x:Name="border"
                            Height="28"
                            CornerRadius="8"
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="Left"
                            Padding="10,0" BorderBrush="#FFD40463" Background="#FFC10792">
                        <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                TextBlock.FontFamily="Segoe UI"
                            TextBlock.FontSize="14"
                            TextBlock.Foreground="#fafafa"
                                 />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF007ACC" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF005187" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#5f0322" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#000"/>
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="RowHeight" Value="22" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="AutomationProperties.IsColumnHeader" Value="True" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="None" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="5,0,0,0" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        <Setter Property="SeparatorBrush" Value="#FF646464" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness="1"
                                Padding="3,0,3,0" BorderBrush="{x:Null}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDEDEDE" Offset="0"/>
                                    <GradientStop Color="#FFF3F1F2" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="WhiteSmoke" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!-- Style pour la ligne sélectionnée. Tous les détails possibles y sont affichés -->
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>

                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>

                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1" Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding
                                AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                <DataGridRowHeader.Template>
                                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                        <Border Width="{TemplateBinding Width}" Padding="5" Height="{TemplateBinding Height}" Background="White">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </DataGridRowHeader.Template>
                            </DataGridRowHeader>

                        </SelectiveScrollingGrid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFE6E6E6" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFEEEEEE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#EE007ACC" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#EE2687fb" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFD6D6D6" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFDDDDDD" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="DG_Toggle">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />

                        <Path x:Name="defaultPath"
                              Margin="2,2,0,0"
                              VerticalAlignment="Center" HorizontalAlignment="Center"
                              Data="M 0 0 L 0 3 L 6 9 L 12 3 L 12 0 L 6 6 L 0 0 Z" RenderTransformOrigin="0.5,0.5"  Fill="#FF007ACC"  >
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                        <Path x:Name="checkedPath"
                              VerticalAlignment="Center" HorizontalAlignment="Center"
                              Data="M 0 0 L 0 3 L 6 9 L 12 3 L 12 0 L 6 6 L 0 0 Z"
                              Fill="#FF007ACC"
                              Visibility="Collapsed"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="defaultPath"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="checkedPath"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="checkedPath"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FFEA02C0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathButtonStyleRight" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                        Height="34" 
                        Width="120" 
                        CornerRadius="4"
                        BorderBrush="#FF004878" Background="#CC0067B0">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="#FF007ACC" BlurRadius="3"/>
                            </Border.Effect>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                TextBlock.Foreground="#fafafa"
                                TextBlock.FontSize="16"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Margin="0,0,10,0"
                                />
                            <Border x:Name="BorderPath" Grid.Column="1" Width="30" Height="30" CornerRadius="15" Background="#FFfafafa">
                                <Path x:Name="Arrow"
                              Width="16"
                              Height="16"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 0 4 L 8 12 L 16 4 L 16 0 L 8 8 L 0 0 Z" RenderTransformOrigin="0.5,0.5" Margin="5,0,0,0" Fill="#CC0067B0" >
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90.815"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathButtonStyleLeft" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                        Height="34" 
                        Width="120" 
                        CornerRadius="4"
                        BorderBrush="#FFCCCCCC">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF9F9F9"/>
                                    <GradientStop Color="#FFDEDEDE" Offset="0.996"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="#FF007ACC" BlurRadius="3"/>
                            </Border.Effect>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition />

                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Column="1"
                                TextBlock.Foreground="#333"
                                TextBlock.FontSize="16"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Margin="0,0,10,0"
                                />
                            <Border x:Name="BorderPath" Grid.Column="0" Width="30" Height="30" CornerRadius="15" Background="#FFB6B6B6">
                                <Path x:Name="Arrow"
                              Width="16"
                              Height="16"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 0 4 L 8 12 L 16 4 L 16 0 L 8 8 L 0 0 Z" RenderTransformOrigin="0.5,0.5" Margin="0,0,5,0" Fill="#FF333333" >
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-270.888"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="swapButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border 
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}" 
                            CornerRadius="4"
                            BorderBrush="#B22064B4"
                            Padding="3"
                            Name="border"
                            BorderThickness="1"
                            Background="#6667AAF8" >
                        </Border>
                        <Path x:Name="Arrow"
                              Width="16"
                              Height="16"
                              Fill="#B22064B4"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="Transparent" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border x:Name="Border"
                    Width="14" Height="14"
                    BorderThickness="1" 
                    BorderBrush="#eaeaea" 
                    Background="Transparent"
                    ToolTip="Voir plus">
                <Grid>
                    <Path x:Name="CollapsedArrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                          Width="10"
                          Height="10"
                          Stretch="Uniform"
                          Data="M13.55896,0L18.461914,0 18.461914,13.557983 32,13.557983 32,18.481018 18.5,18.481018 18.5,32 13.55896,32 13.55896,18.481018 0,18.481018 0,13.557983 13.55896,13.557983z">
                        <Path.Fill>
                            <SolidColorBrush Color="#bbb" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="Collapsed"
                          Stretch="Uniform"
                          Width="10"
                          Height="10"
                            Data="M0,0L32,0 32,5.3 0,5.3z">
                        <Path.Fill>
                            <SolidColorBrush Color="#bbb" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpandededArrow"
                                          Storyboard.TargetProperty="(Path.Fill).
                (SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#007acc" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CollapsedArrow"
                                          Storyboard.TargetProperty="(Path.Fill).
                (SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#007acc" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="#000000" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledBorderLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CollapsedArrow"
                                                                       Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Hidden</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandededArrow"
                                                                       Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>

                            <!--ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="Border"
                                                           Storyboard.TargetProperty="ToolTip">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ToolTip>Cacher la vue</ToolTip>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames-->

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}, Path=IsExpanded}" Value="True">
                <Setter TargetName="Border" Property="ToolTip" Value="Cacher la vue" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type Expander}" x:Key="MyExpanderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid Margin="0"
                          HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow"
                           Height="0" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"
                                
                                >
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton OverridesDefaultStyle="True"
                                                    Template="{StaticResource ExpanderToggleButton}"
                                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                                     RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}"
                                                              Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </ToggleButton.Background>
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="1"
                                                      Margin="4 0 0 0"
                                                      ContentSource="Header"
                                                  TextBlock.FontSize="16"
                                                  TextBlock.LineHeight="18"
                                                  RecognizesAccessKey="True" />
                                </Grid>
                            </StackPanel>
                        </Border>
                        <Border x:Name="Content"
                                  Grid.Row="1">
                            <ContentPresenter />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <!--Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentRow"
                                                                       Storyboard.TargetProperty="Height"
                                                         To="{Binding DesiredHeight, ElementName=Content}" Duration="0:0:0.3" />
                                            </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions-->
                            <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" x:Key="transformButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="border" Width="{TemplateBinding ActualWidth}" 
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}">


                        <ContentPresenter Name="content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          TextBlock.FontSize="14"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"  />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CheckStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <!--<EasingColorKeyFrame Value="{TemplateBinding Foreground, Converter={StaticResource brushToColorConverter}}" />-->
                                            <EasingColorKeyFrame Value="{StaticResource tabOptionBgColor}" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="{StaticResource tabOptionFgColor}" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" x:Key="transformButtonStandard">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="border" 
                            Width="{TemplateBinding ActualWidth}" 
                            Height="{TemplateBinding ActualHeight}"
                            >
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#f5f5f5" Offset="0"/>
                                <GradientStop Color="#f2f2f2" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>

                        <ContentPresenter Name="content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"  />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CheckStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame Value="#a2a2a2" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame Value="#8a8a8a" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                        
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="{StaticResource tabOptionFgColorStd}" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="rotateButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#7FEEEEEE" Offset="0"/>
                                <GradientStop Color="#66C7C7C7" Offset="1"/>
                                <GradientStop Color="#B2EAEAEA" Offset="0.499"/>
                                <GradientStop Color="#99CDCDCD" Offset="0.5"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter  />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="Transparent" Name="border" BorderThickness="1" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                            <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Visibility="Visible" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" Background="Transparent" VerticalContentAlignment="Stretch">
                            </DatePickerTextBox>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ButtonNavRightStyle" TargetType="{x:Type Button}">
        <Grid>
            <Border Width="30"
                Height="30"
                CornerRadius="10"
                BorderThickness="1"
                BorderBrush="#cacaca"
                    Name="border"
                    ToolTip="{TemplateBinding Content}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE2E2E2" Offset="1"/>
                        <GradientStop Color="White"/>
                    </LinearGradientBrush>
                </Border.Background>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFE6E6E6" />
                                </ColorAnimationUsingKeyFrames>

                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFEEEEEE" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>

                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>

            <Path Data="M0,0 L0,12 10,6Z" Name="path" Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB60101" Offset="0"/>
                        <GradientStop Color="Red" Offset="1"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>

        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ContentPresenter Grid.ColumnSpan="2" Margin="3,0,0,3" 
                              VerticalAlignment="Center"
                              Grid.Row="0"
                              TextBlock.FontSize="{TemplateBinding FontSize}"
                              Visibility="Visible"/>

            <Border Width="46" Grid.Row="1" HorizontalAlignment="Left" Height="22" Name="border" BorderThickness="2" CornerRadius="11" Background="#ffffff" BorderBrush="#FF454546">
                <Ellipse Name="ellipse" Height="11" Width="11" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,3,0" RenderTransformOrigin="-1.769,0.385" Fill="#EE454546" >
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform/>
                            <TranslateTransform X="0"/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>
            <TextBlock Text="Non" Grid.Row="1" Name="txtCheck" FontSize="12" Grid.Column="1" Margin="5,0,0,0" 
                              VerticalAlignment="Center"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                                                           DecelerationRatio="0.6">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"  />
                                <EasingDoubleKeyFrame Value="25" KeyTime="0:0:0.5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="BorderThickness">
                                <DiscreteThicknessKeyFrame KeyTime="0" Value="0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#007ACC" />

                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#ffffff" />

                            </ColorAnimationUsingKeyFrames>

                            <StringAnimationUsingKeyFrames Storyboard.TargetName="txtCheck"
                                                           Storyboard.TargetProperty="Text">
                                <DiscreteStringKeyFrame KeyTime="0:0:0" Value="Oui" />
                            </StringAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                                                           DecelerationRatio="0.6">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"  />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#ffffff" />

                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#ee454546" />

                            </ColorAnimationUsingKeyFrames>

                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="BorderThickness">
                                <DiscreteThicknessKeyFrame KeyTime="0" Value="2" />
                            </ThicknessAnimationUsingKeyFrames>

                            <StringAnimationUsingKeyFrames Storyboard.TargetName="txtCheck"
                                                           Storyboard.TargetProperty="Text">
                                <DiscreteStringKeyFrame KeyTime="0:0:0" Value="Non" />
                            </StringAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="SwitchTemplate" TargetType="{x:Type CheckBox}">
        <Grid>

            <Border Width="46" 
                    Grid.Row="1" 
                    HorizontalAlignment="Left" 
                    Height="26" 
                    Name="border" 
                    BorderThickness="1" 
                    CornerRadius="13" 
                    Background="#fafafa" 
                    BorderBrush="#dadada">
                <Ellipse Name="ellipse" 
                         Height="24" 
                         Width="24" 
                         HorizontalAlignment="Left" 
                         VerticalAlignment="Center" 
                         Margin="0" 
                         RenderTransformOrigin="-1.769,0.385" 
                         Fill="#fff" >
                    <Ellipse.Effect>
                        <DropShadowEffect BlurRadius="4"
                                          ShadowDepth="0"
                                          Color="#000000"
                                          Opacity="0.4"
                                          />
                    </Ellipse.Effect>
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform/>
                            <TranslateTransform X="0"/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                                                           DecelerationRatio="0.6">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"  />
                                <EasingDoubleKeyFrame Value="20" KeyTime="0:0:0.5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="BorderThickness">
                                <DiscreteThicknessKeyFrame KeyTime="0" Value="0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#4cd964" />

                            </ColorAnimationUsingKeyFrames>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                                                           DecelerationRatio="0.6">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"  />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                          BeginTime="0:0:0.2">
                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#fafafa" />

                            </ColorAnimationUsingKeyFrames>


                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="BorderThickness"
                                                              BeginTime="0:0:0.2">
                                <DiscreteThicknessKeyFrame KeyTime="0" Value="1" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Ellipse Height="22" Width="22" StrokeThickness="1" Stroke="#FFBDBDBD" >
                    <Ellipse.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="#FFECECEC" Offset="1"/>
                            <GradientStop Color="White"/>
                        </RadialGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>

                <Ellipse Width="10" Height="10" Fill="#DD007ACC" Name="ellipse" Visibility="Collapsed">
                    <Ellipse.Effect>
                        <DropShadowEffect ShadowDepth="0" Direction="0" Opacity="0.4"/>
                    </Ellipse.Effect>
                </Ellipse>
            </Grid>

            <ContentPresenter Grid.Column="1"
                              VerticalAlignment="Center"
                              Margin="3,0,0,0"/>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ListView" x:Key="wrapStretchListStyle">
        <Setter Property="ScrollViewer.CanContentScroll" 
                    Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <control:AlignableWrapPanel VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter Width="{TemplateBinding ActualWidth}"/>
                            </ScrollViewer>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView" x:Key="wrapCenterListStyle">
        <Setter Property="ScrollViewer.CanContentScroll" 
                    Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <control:AlignableWrapPanel VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"
                                                HorizontalContentAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter Width="{TemplateBinding ActualWidth}"/>
                            </ScrollViewer>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border BorderThickness="0" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}" 
                            HorizontalAlignment="Stretch"  
                            Background="{TemplateBinding Background}" 
                            BorderBrush="#FFE2E2E2">
                        <Grid>
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="border"
                            Padding="0" 
                            HorizontalAlignment="Stretch"
                            >
                        <!--<Border.RenderTransform>
                            <TranslateTransform X="-15"/>

                        </Border.RenderTransform>-->
                        <StackPanel>
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"/>
                            <Border BorderBrush="#eaeaea" 
                                    Margin="10,0"
                                    BorderThickness="0,0,0,1"/>
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)"
                                                                   DecelerationRatio="0.6"
                                                                   BeginTime="0:0:0"
                                                                                >
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="-5" />
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:2">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>

                                    --><!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)"
                                                                   DecelerationRatio="0.6"
                                                                                >
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="-2"  />
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>--><!--
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)"
                                                                   DecelerationRatio="0.6"
                                                                   BeginTime="0:0:0"
                                                                                >
                                        <SplineDoubleKeyFrame KeyTime="0:0:0" Value="-15" />
                                    </DoubleAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)"
                                                                   DecelerationRatio="0.6"
                                                                                >
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="-2"  />
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SegmentedOptionTemplate">
        <Border Name="border" 
                    Padding="10 3"
                    ToolTip="{Binding ToolTip}"
                    Background="Transparent"
                    >
            <TextBlock Name="content"
                           Text="{Binding Name}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontWeight="DemiBold"
                           FontSize="12"
                           Foreground="{DynamicResource Primary.ColorBrush}" />
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Primary.ColorBrush}" />
                <Setter TargetName="content" Property="TextBlock.Foreground" Value="#fff" />

            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SegmentedOptionTemplate2">
        <Border Name="border" 
                    Padding="10 3"
                    ToolTip="{Binding OptionItem.ToolTip}"
                    Background="Transparent"
                    >
            <TextBlock Name="content"
                           Text="{Binding OptionItem.Name}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontWeight="DemiBold"
                           FontSize="12"
                           Foreground="#ff7002"  />
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                <Setter TargetName="border" Property="Background" Value="#ff7002" />
                <Setter TargetName="content" Property="TextBlock.Foreground" Value="#FFFFFF" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <Style TargetType="ListViewItem" x:Key="segmentedOptionStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border"
                                Padding="0" 
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="Stretch"
                            >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch"/>
                            <Border Width="1"
                                    Grid.Column="1"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Converter={StaticResource separatorConverter}}"
                                    Background="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ListView}}" />
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ListView" x:Key="ListView.HorizontalSegmentedOptions.Style">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border BorderThickness="1" 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}" 
                            HorizontalAlignment="Stretch"  
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            >
                        <Grid>
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonMenuTemplate" TargetType="Button">
        <Border Height="50" 
                Width="50" 
                Padding="5" 
                Background="#00000000" 
                Name="border">
            <StackPanel Orientation="Horizontal">
                <Path Fill="{StaticResource Primary.ColorBrush}"
                      Data="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                      Margin="10,0"
                      Stretch="Uniform"
                      Width="18"
                      Height="18"
                      />

            </StackPanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame Value="#10000000" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <Style TargetType="Button" x:Key="ButtonEditStyle">
        <Setter Property="ToolTip" Value="Modifier" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="20" Height="20" Name="border" CornerRadius="14" Background="#4C000000">
                        <Path Name="path"
                            Fill="#fff"
                              Width="10" Height="10"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#333" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonChooserStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="2" Name="border" Padding="5,0" BorderBrush="#FFA2A2A2" BorderThickness="1" Background="#FFF1F1F1">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Name="content"
                                          TextBlock.Foreground="#ff000000"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ffffff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                              Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#333333" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonDeleteStyle">
        <Setter Property="ToolTip" Value="Supprimer" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="20" Height="20" Name="border" CornerRadius="10" Background="#E0ECECEC">
                        <Path Name="path"
                              Fill="#FFF10000"
                              Width="14" Height="14"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M15.000001,8.0000272L17,8.0000272 17,27.000028 15.000001,27.000028z M11.000001,8.0000272L13.000001,8.0000272 13.000001,27.000028 11.000001,27.000028z M7.0000005,8.0000272L9.000001,8.0000272 9.000001,27.000028 7.0000005,27.000028z M3.0790101,5.0000274L4.9959994,29.922999 19.000006,30.000026 20.918949,5.0000274z M13.771989,1.9959999L10.198989,2.0000001C10.158989,2.025,9.9989892,2.241,9.9989892,2.6000001L9.9989892,3.0000258 13.998989,3.0000258 13.998989,2.6000001C13.998989,2.241,13.838988,2.025,13.771989,1.9959999z M10.198989,0L13.798988,0C15.031989,0,15.998989,1.142,15.998989,2.6000001L15.998989,3.0000258 23.07898,3.0000258 24,3.0000272 24,5.0000274 22.925121,5.0000274 20.995976,30.076991C20.999027,31.102992,20.100956,32.000026,18.999029,32.000026L4.9990512,32.000026C3.8960255,32.000026,2.9990543,31.102992,2.999054,30.000026L1.073059,5.0000274 0,5.0000274 0,3.0000272 0.91897895,3.0000272 7.9989887,3.0000258 7.9989887,2.6000001C7.9989887,1.142,8.9659892,0,10.198989,0z">
                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#333" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFlatIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Width}"
                            CornerRadius="50"  
                            Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}">

                        <Path  x:Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform" 
                               Fill="{TemplateBinding Foreground}">

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CC000000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CCFFFFFF" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70DDDDDD" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70999999" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFlatIconStyle2" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Width}"
                            CornerRadius="50"  
                            Padding="9" 
                            Opacity="0.6"
                            Background="{TemplateBinding Background}">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                              Opacity="0.4"/>
                        </Border.Effect>

                        <Path  x:Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform" 
                               Fill="{TemplateBinding Foreground}">

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CC000000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>-->

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CCFFFFFF" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".95"
                                                         Duration="0">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70DDDDDD" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70999999" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFlatIconStyle3" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#e1f0ff" />
        <Setter Property="Foreground" Value="#3699ff" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Width}"
                            CornerRadius="6"  
                            Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}">

                        <Path  x:Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform" 
                               Fill="{TemplateBinding Foreground}">

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CC000000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CCFFFFFF" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70DDDDDD" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#70999999" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioFlatIconStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Width}"
                            CornerRadius="4"  
                            Padding="5" 
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">

                        <Path  x:Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform" 
                               Fill="{TemplateBinding Foreground}">

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CC000000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#CCFFFFFF" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup Name="CheckStates">
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#007ACC" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#007ACC" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WhiteButtonSwapIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Width}"
                            CornerRadius="50"  
                            Padding="8" 
                            Background="#20000000">

                        <Path  x:Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform" 
                               Fill="#90ffffff">
                            <!--<Path.Effect>
                                <DropShadowEffect Direction="0" ShadowDepth="0" Opacity="0.3"/>
                            </Path.Effect>-->

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#FFFFFFFF" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#90000000" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#FF2888F3" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            CornerRadius="4" 
                            Background="{TemplateBinding Background}"
                            Padding="10,5" 
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding Foreground}">

                        <ContentPresenter Name="content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ffffff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#dddddd" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fafafa" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#dadada" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="menuOptionStyleLight" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Height="48" Width="Auto" BorderBrush="#dadada" Background="#00FFFFFF" x:Name="border" BorderThickness="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" 
                                    Width="4" 
                                    Height="25"
                                    VerticalAlignment="Center"
                                    x:Name="indicator" 
                                    Background="Transparent" />

                            <Path Data="{TemplateBinding Property=Tag, Converter={StaticResource pathDataConverter}}" 
                                  Fill="#fff"
                                  x:Name="path"
                                  Stretch="Uniform"
                                  Width="18"
                                  Height="18"
                                  Margin="10,0"
                                  Grid.Column="1"/>

                            <ContentPresenter x:Name="content"
                                              TextBlock.FontSize="16"
                                              TextBlock.FontFamily="Segoe UI"
                                              TextBlock.TextAlignment="Left"
                                              TextBlock.Foreground="#fff"
                                              VerticalAlignment="Center"
                                              Margin="5,2"
                                              Grid.Column="2"
                                          />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#10ffffff" Duration="0:0:0"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="indicator"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ffffff" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>


                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonOptionStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Padding="5" 
                            Background="#fff"
                            BorderThickness="0,0,0,1"
                            BorderBrush="#CCC">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path Name="path" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" 
                               Stretch="Uniform"
                                   Width="20"
                               Fill="#555">

                            </Path>

                            <ContentPresenter Grid.Column="1"
                                              TextBlock.FontSize="14"
                                              TextBlock.Foreground="#555" 
                                              Margin="10,0"
                                              VerticalAlignment="Center"
                                              Name="content"/>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#007ACC" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#007ACC" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#cacaca" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#cacaca" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="10,5"
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="1"
                            Name="border" Background="#10ffffff">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="{TemplateBinding Background}"
                                  Stretch="Uniform"
                                  Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}"
                                  Name="path"
                                  >
                            </Path>
                        </StackPanel>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFF" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonClean" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            CornerRadius="22"
                            Padding="10,5" 
                            Background="{TemplateBinding Background}"
                            Name="border">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Fill="White"
                                  Name="path"
                                  Stretch="Uniform"
                                  Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}"
                                  Margin="0,0,10,0"
                                  />
                            <ContentPresenter
                                x:Name="contentString"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                            TextBlock.FontSize="16"
                            TextBlock.Foreground="White"
                          
                                 />
                        </StackPanel>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#000" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#eee" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="contentString"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#40ffffff" />
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0" Value="#40ffffff" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="NavButtonTemplate" TargetType="Button">
        <Border x:Name="BorderPath" Cursor="Hand" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="20" Background="#FFF4F9FF">
            <Path x:Name="Arrow"
                  Width="20"
                  Height="20"
                  Stretch="Uniform"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Fill="#CC0067B0"
                  Data="{TemplateBinding Tag, Converter={StaticResource pathDataConverter}}" />

            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="4" Direction="270" Opacity="0.2"/>
            </Border.Effect>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderPath"
                                     Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#CC0067B0" />
                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                     Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFFFFF" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                     Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0" Value="#DDDDDD" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>

    </ControlTemplate>

    <Style x:Key="PlaceHolderPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Padding" Value="8,2" />
        <Setter Property="Background" Value="#FFFAFAFA" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border" 
                                CornerRadius="20" 
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}"
                                BorderThickness="2"
                                BorderBrush="#d7d7d7"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          VerticalAlignment="Center"
                                              VerticalContentAlignment="Center"
                                          Width="{TemplateBinding Width}"  
                                          Padding="{TemplateBinding Padding}" 
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="{StaticResource Primary.Color}" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaceHolderTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="8,2" />
        <Setter Property="Background" Value="#FFFAFAFA" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" 
                                CornerRadius="20" 
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}"
                                BorderThickness="2"
                                BorderBrush="#d7d7d7"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          VerticalAlignment="Center"
                                              VerticalContentAlignment="Center"
                                          Width="{TemplateBinding Width}"  
                                          Padding="{TemplateBinding Padding}" 
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="{StaticResource Primary.Color}" KeyTime="0:0:0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonLockStyle">
        <Setter Property="ToolTip" Value="Modifier" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="20" Height="20" Name="border" CornerRadius="14" Background="#4C000000">
                        <Path Name="path"
                            Fill="#fff"
                              Width="10" Height="10"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M25.369838,3.2038372C24.618836,3.1938274 23.869849,3.4998594 23.346841,4.1018527 22.416856,5.1728428 22.551848,6.7788699 23.649848,7.6858576 24.745833,8.5938828 26.389821,8.4608863 27.319821,7.3918493 28.247809,6.3208592 28.114814,4.7148321 27.016814,3.8068679 26.537829,3.4088555 25.952826,3.2108562 25.369838,3.2038372z M21.936847,0.00081616286C24.143834,0.028831268 26.353826,0.77883557 28.167808,2.2818346 32.31878,5.716852 32.832784,11.78488 29.31581,15.838919 26.875825,18.648933 23.151851,19.711927 19.710864,18.972909L16.400889,22.785981C16.400889,22.785981,13.852903,22.622955,12.093927,23.23093L4.7509751,31.698018 0.26000805,32.000024 0,29.33802 11.109925,16.531917C11.008928,15.864921,10.894931,15.389942,10.894931,15.389942L12.738913,13.267921C11.383925,10.050862 11.827923,6.2378509 14.290903,3.3998223 16.267896,1.1208175 19.099877,-0.035194976 21.936847,0.00081616286z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#333" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonAddMeanStyle">
        <Setter Property="ToolTip" Value="Ajouter" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" Name="border" CornerRadius="20" Background="#2888f3">
                        <Path Name="path"
                              Fill="#fff"
                              Width="14" Height="14"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>

                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#333" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#fff" KeyTime="0:0:0" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonInfoStyle">
        <Setter Property="ToolTip" Value="Astuce" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" 
                            Name="border" 
                            CornerRadius="20" 
                            Background="#FFFFFF"
                            BorderBrush="{StaticResource Primary.ColorBrush}"
                            BorderThickness="1">
                        <Path Name="path"
                              Fill="{StaticResource Primary.ColorBrush}"
                              Width="24" Height="24"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M12.663999,31L17.343955,31C17.619952,31 17.84395,31.224 17.84395,31.5 17.84395,31.776 17.619952,32 17.343955,32L12.663999,32C12.388001,32 12.164003,31.776 12.164003,31.5 12.164003,31.224 12.388001,31 12.663999,31z M11.883967,28.598991L18.123975,28.598991C18.399976,28.598991 18.623976,28.82299 18.623976,29.098991 18.623976,29.37499 18.399976,29.598991 18.123975,29.598991L11.883967,29.598991C11.606967,29.598991 11.383966,29.37499 11.383966,29.098991 11.383966,28.82299 11.606967,28.598991 11.883967,28.598991z M26,10.5L29,10.5C29.552999,10.5 30,10.947 30,11.5 30,12.053 29.552999,12.5 29,12.5L26,12.5C25.447,12.5 25,12.053 25,11.5 25,10.947 25.447,10.5 26,10.5z M1,10.5L3.9999995,10.5C4.5529999,10.5 4.9999999,10.947 4.9999999,11.5 4.9999999,12.053 4.5529999,12.5 3.9999995,12.5L1,12.5C0.44700003,12.5 0,12.053 0,11.5 0,10.947 0.44700003,10.5 1,10.5z M14.999918,8.5000013C11.250889,8.5000014 8.1999812,11.656982 8.199981,15.536985 8.1999812,16.622983 8.4409485,17.674984 8.9159243,18.661983L8.9629219,18.778987C9.2499096,19.635981,10.667881,21.642999,11.494908,22.708002L11.563878,22.807977C12.246984,23.950004,12.537878,24.978019,12.658972,25.700004L17.308881,25.700004C17.429975,24.978019,17.720991,23.950004,18.403975,22.807977L18.472945,22.707025C18.490889,22.684015 20.294969,20.356989 20.898974,19.043025 21.49895,17.936031 21.799976,16.744992 21.799976,15.536985 21.799976,11.656982 18.748947,8.5000014 14.999918,8.5000013z M14.999918,6.5000028C19.851976,6.5000026 23.79998,10.554016 23.79998,15.536985 23.79998,17.078 23.414968,18.598995 22.684988,19.937983 22.059987,21.30401 20.378953,23.512016 20.091966,23.884025 19.194993,25.411003 19.223923,26.645986 19.223923,26.65801L19.257981,27.689992 18.224898,27.700002 10.690952,27.700002 10.74393,26.648977C10.74393,26.64501 10.772983,25.411003 9.8769853,23.885002 9.5099196,23.408012 7.5919482,20.887994 7.0879191,19.47497 6.498929,18.231014 6.1999784,16.906003 6.1999782,15.536985 6.1999784,10.554016 10.146883,6.5000026 14.999918,6.5000028z M5.2357305,3.2319894C5.4915829,3.2319894,5.7475603,3.3297346,5.9430431,3.5252256L8.4778192,6.0601038C8.8687847,6.4510851 8.8687847,7.0830548 8.4778192,7.4740361 8.2828364,7.6690267 8.026859,7.767022 7.7708815,7.767022 7.5149043,7.767022 7.2589269,7.6690267 7.0639442,7.4740361L4.529168,4.9391578C4.1382024,4.5481762 4.1382024,3.9152067 4.529168,3.5252256 4.7241507,3.3297346 4.9798781,3.2319894 5.2357305,3.2319894z M24.129253,2.8740335C24.385105,2.8740332 24.640834,2.9717779 24.835819,3.1672668 25.226785,3.5572448 25.226785,4.1902094 24.835819,4.5811871L22.300029,7.1170448C22.105045,7.3120338 21.849066,7.4100283 21.593088,7.4100283 21.337109,7.4100283 21.08113,7.3120338 20.886146,7.1170448 20.495179,6.7260668 20.495179,6.0941023 20.886146,5.7031245L23.421936,3.1672668C23.61742,2.9717779,23.873397,2.8740332,24.129253,2.8740335z M15,0C15.553,0,16,0.44700003,16,1L16,4.0000005C16,4.5530001 15.553,5.0000001 15,4.9999999 14.447,5.0000001 14,4.5530001 14,4.0000005L14,1C14,0.44700003,14.447,0,15,0z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>
                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#000" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ff0" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ff0" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonInfoStyle2">
        <Setter Property="ToolTip" Value="Astuce" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" 
                            Name="border" 
                            CornerRadius="20" 
                            Background="#FFFFFF"
                            BorderBrush="#2888f3"
                            BorderThickness="1">
                        <Path Name="path"
                              Fill="#2888f3"
                              Width="24" Height="24"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Data="M16.800049,11.699997C16.100037,11.699997 15.300049,12 14.300049,12.5 13.400024,13 12.400024,13.900002 11.300049,15.099998L10.900024,15.5 12.400024,16.699997 12.700012,16.400002C13.900024,15.300003 14.300049,15 14.400024,14.900002 12.900024,20.199997 12.100037,23.400002 12.100037,24.800003 12.100037,25.300003 12.300049,25.800003 12.600037,26.099998 12.900024,26.400002 13.400024,26.599998 13.900024,26.599998 14.400024,26.599998 15,26.400002 15.800049,26 16.5,25.599998 17.600037,24.699997 19,23.300003L19.400024,22.900002 18,21.5 17.600037,21.800003C16.300049,23 15.700012,23.400002 15.600037,23.599998 15.600037,23 15.900024,21.5 17.200012,17.099998 18.200012,13.599998 18.200012,13.300003 18.200012,13.099998 18.200012,12.699997 18,12.300003 17.700012,12.099998 17.600037,11.800003 17.200012,11.699997 16.800049,11.699997z M16.700012,5.5999985C15.5,5.5999985 14.5,6.5999985 14.5,7.8000031 14.5,9 15.5,10 16.700012,10 17.900024,10 18.900024,9 18.900024,7.8000031 18.900024,6.5 17.900024,5.5999985 16.700012,5.5999985z M16,0C24.800049,0 32,7.1999969 32,16 32,24.800003 24.800049,32 16,32 7.2000122,32 0,24.800003 0,16 0,7.1999969 7.2000122,0 16,0z">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.3"/>
                            </Path.Effect>
                        </Path>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#2888f3" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ffffff" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame Value="#ffffff" KeyTime="0:0:0.5" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="#FFE6E6E6"
                            BorderBrush="#FFCDCDCD"
                            BorderThickness="1">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Grid>
                        <Border Background="#20F0F0F0"
                            BorderBrush="#FFCDCDCD"
                            Margin="10"
                            BorderThickness="1">
                            <Border.Effect>
                                <DropShadowEffect Direction="0" 
                                                  ShadowDepth="0" 
                                                  Color="Black" 
                                                  BlurRadius="6" 
                                                  Opacity="0.5"/>
                            </Border.Effect>
                        </Border>
                        <Border Background="#FFFFFF"
                            Margin="10">
                            <StackPanel ClipToBounds="True" 
                                    Orientation="Vertical" 
                                    IsItemsHost="True" />
                        </Border>
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" 
                            Height="16" 
                            Padding="5,5,5,5" 
                            Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" 
                              Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" 
                              Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" 
                                      ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="1" Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" 
                                              ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>